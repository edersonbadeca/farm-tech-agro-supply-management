CREATE USER APP IDENTIFIED BY 123456;
GRANT CONNECT, RESOURCE TO APP;
GRANT CREATE SESSION TO APP;
ALTER USER APP QUOTA UNLIMITED ON USERS;

CREATE TABLE APP.suppliers (
    id INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    contact_info VARCHAR(100),
    address VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE OR REPLACE TRIGGER APP.suppliers_before_update
BEFORE UPDATE ON APP.suppliers
FOR EACH ROW
BEGIN
    :new.updated_at := CURRENT_TIMESTAMP;
END;
/

CREATE TABLE APP.inputs (
    id INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    category VARCHAR(50) NOT NULL,
    quantity INTEGER NOT NULL,
    expiration_date DATE NOT NULL,
    supplier_id INTEGER,
    addition_date DATE DEFAULT SYSDATE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (supplier_id) REFERENCES APP.suppliers(id)
);

CREATE OR REPLACE TRIGGER APP.inputs_before_update
BEFORE UPDATE ON APP.inputs
FOR EACH ROW
BEGIN
    :new.updated_at := CURRENT_TIMESTAMP;
END;
/

CREATE TABLE APP.stock_movements (
    id INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    input_id INTEGER,
    quantity INTEGER NOT NULL,
    movement_type VARCHAR(10) NOT NULL,
    movement_date DATE DEFAULT SYSDATE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (input_id) REFERENCES APP.inputs(id)
);

CREATE OR REPLACE TRIGGER APP.stock_movements_before_update
BEFORE UPDATE ON APP.stock_movements
FOR EACH ROW
BEGIN
    :new.updated_at := CURRENT_TIMESTAMP;
END;

ALTER TABLE APP.stock_movements
ADD CONSTRAINT chk_movement_type CHECK (movement_type IN ('IN', 'OUT'));
